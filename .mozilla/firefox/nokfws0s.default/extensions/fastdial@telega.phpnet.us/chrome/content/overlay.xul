<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="chrome://fastdial/skin/toolbar.css" type="text/css"?>
<!DOCTYPE overlay SYSTEM "chrome://fastdial/locale/fastdial.dtd">
<overlay xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
  <window id="main-window">
    <hbox style="overflow:hidden; height: 0;">
      <vbox id="hidden-box"/>
    </hbox>
    <menupopup id="fd-menu" oncommand="Fd.menu.onCommand(event);">
      <menu id="fd-add" label="&add;">
        <menupopup>
          <menuitem id="fd-add-thumbnail" label="&thumbnail;"/>
          <menuitem id="fd-add-folder" label="&folder;"/>
        </menupopup>
      </menu>
      <menuitem id="fd-open" label="&open;"/>
      <menuitem id="fd-open-all" label="&openAll;"/>
      <menuseparator id="fd-separator1"/>
      <menuitem id="fd-refresh" label="&refresh;"/>
      <menuitem id="fd-refresh-all" label="&refreshAll;"/>
      <menuitem id="fd-remove" label="&remove;"/>
      <menuseparator id="fd-separator2"/>
      <menuitem id="fd-properties" label="&properties;"/>
      <menuitem id="fd-preferences" label="&preferences;"/>
    </menupopup>
  </window>

  <toolbarpalette id="BrowserToolbarPalette">
    <toolbarbutton id="fd-button" label="Fast Dial" class="toolbarbutton-1"
                   type="menu-button" oncommand="openUILink(FdInfo.URL, event);">
      <menupopup oncommand="event.stopPropagation();"
                 onclick="this.hidePopup();"
                 onpopupshowing="Fd.populateMenu(this);"/>
    </toolbarbutton>
  </toolbarpalette>

  <popup id="contentAreaContextMenu">
    <menuitem id="fd-add-menu" label="&addToFastDial;" class="menuitem-iconic"
              image="chrome://fastdial/skin/icon.png" oncommand="Fd.addPage();"/>
  </popup>

  <script src="utils.js"/>
  <script src="dom.js"/>
  <script src="file.js"/>
  <script src="tabloader.js"/>
  <script src="bookmark.js"/>
  <script src="storage.js"/>
  <script src="snapshot.js"/>
  <script src="template/template.js"/>
  <script src="thumbnail/thumbnail.js"/>
  <script src="legacy.js"/>
  <script>
    <![CDATA[
      var Fd = {
        menu: { 
          thumbnail: null,

          show: function(x, y, thumbnail) {
            Fd.menu.thumbnail = thumbnail;
            var isEmpty = !thumbnail || !thumbnail.properties.id; 
            var refreshAll = FdPrefs.getBool("showRefreshAll");

            FdDom.get("fd-add").hidden = !thumbnail || !isEmpty;
            FdDom.get("fd-open").hidden = isEmpty;
            FdDom.get("fd-open-all").hidden = isEmpty || !thumbnail.properties.isFolder;
            FdDom.get("fd-separator1").hidden = isEmpty;
            FdDom.get("fd-refresh").hidden = isEmpty;
            FdDom.get("fd-refresh-all").hidden = !refreshAll;
            FdDom.get("fd-remove").hidden = isEmpty;
            FdDom.get("fd-separator2").hidden = isEmpty && (thumbnail || !refreshAll);
            FdDom.get("fd-properties").hidden = isEmpty;
            FdDom.get("fd-preferences").hidden = thumbnail;

            var menu = FdDom.get("fd-menu");
            menu.openPopupAtScreen(x, y, true);
          },

          onCommand: function(e) {
            var thumbnail = Fd.menu.thumbnail;
            switch(e.target.id) {
              case "fd-open-all":    thumbnail.openAll(); break;
              case "fd-refresh":     thumbnail.refresh(); break;
              case "fd-remove":      thumbnail.remove(); break;
              case "fd-properties":  thumbnail.openProperties(); break;
              case "fd-preferences": Fd.openPreferences(); break;
              case "fd-open":        
                openUILinkIn(thumbnail.properties.url, "tabshifted");
                break;
              case "fd-refresh-all":
                var wnd = content.wrappedJSObject;
                for(var i in wnd.thumbnails) {
                  var thumbnail = wnd.thumbnails[i];
                  if (thumbnail.properties.refreshAll == undefined
                        ? !thumbnail.properties.customImage
                        : thumbnail.properties.refreshAll) thumbnail.refresh();
                }
                break;
              case "fd-add-thumbnail": thumbnail.openProperties(); break;
              case "fd-add-folder":
                var properties = FdUtils.clone(thumbnail.properties);
                var thumb = new FdThumbnail(properties, thumbnail.folder);
                thumb.properties.isFolder = true;
                thumb.openProperties();
                break;
            }
          }
        },

        createMenuPopup: function(folderId, onItem) {
          var menupopup;
          var items = FdStorage.getItems(folderId);

          for(var i in items) {
            var item = items[i];
            if (!item.isFolder) continue;

            var menuitem;
            var childpopup = Fd.createMenuPopup(item.id);
            if (childpopup) {
              menuitem = document.createElement("menu");
              menuitem.appendChild(childpopup);
            }
            else menuitem = document.createElement("menuitem");
            menuitem.setAttribute("label", item.title);
            menuitem.setAttribute("onclick",
              "if (event.target == this) openUILink('" + item.url + "', event);");

            if (!menupopup) {
              menupopup = document.createElement("menupopup");
              menupopup.setAttribute("onpopupshowing", "event.stopPropagation();");
            }
            menupopup.appendChild(menuitem);
          }
          return menupopup;
        },

        populateMenu: function(menupopup) {
          var root = FdStorage.getRoot();
          var temp = Fd.createMenuPopup(root.id);

          FdDom.clear(menupopup);
          var menuitem;
          while(menuitem = temp.firstChild) menupopup.appendChild(menuitem);
        },

        openPreferences: function() {
          openDialog("chrome://fastdial/content/preferences.xul",
                     "fastdial-preferences", "chrome,centerscreen,toolbar");
        },

        initialize: function() {
          FdTabLoader.load();
          Fd.initShortcutKeys();

          var tabMenu = document.getAnonymousElementByAttribute(gBrowser, "anonid", "tabContextMenu");
          var menuitem = FdDom.get("fd-add-menu").cloneNode(true);
          tabMenu.appendChild(menuitem);

          if (!FdPrefs.getString("version")) {
            FdPrefs.setString("version", FdUtils.getVersion());
            Fd.addToolbarButton()
          }
        },

        addToolbarButton: function() {
          var navbar = document.getElementById("nav-bar");
          if (!navbar.currentSet.match("fd-button")) {
            var urlbar = FdDom.get("urlbar-container");
            navbar.insertItem("fd-button", urlbar, null, false);
            navbar.currentSet = navbar.currentSet;
            navbar.setAttribute("currentset", navbar.currentSet);
            document.persist("nav-bar", "currentset");
          }
        },

        initShortcutKeys: function() {
          var mainKeyset = FdDom.get("mainKeyset");
          var items = FdStorage.getAllItems();

          for(var i in items) {
            var item = items[i];
            if (!item.shortcutKey) continue;

            var modifiers = "";
            if (item.shortcutKey.match(/Ctrl/)) modifiers += "accel ";
            if (item.shortcutKey.match(/Alt/)) modifiers += "alt ";
            if (item.shortcutKey.match(/Shift/)) modifiers += "shift ";

            var key = document.createElement("key");
            key.setAttribute("modifiers", modifiers);
            key.setAttribute("key", item.shortcutKey.match(/.$/));

            var parent = items[item.folderId];
            var openIn = (!item.isFolder && item.openIn) ||
                         (parent && parent.openIn) || "current";

            var command = "openUILinkIn('" + item.url + "','" + openIn + "');";
            key.setAttribute("oncommand", command);

            FdDom.prepend(mainKeyset, key);
          }
        },

        autoRefresh: function() {
          var currentTime = new Date().getTime();
          var items = FdStorage.getAllItems();
          for(var i in items) {
            var item = items[i];
            if (!item.refresh || item.refreshed + item.refresh * 60 * 1000 > currentTime) continue;
            FdSnapshot.create(item, items[item.folderId]);
          }
          setTimeout(Fd.autoRefresh, 60 * 1000);
        },

        cleanUp: function() {
          var items = FdStorage.getAllItems();
          var dir = FdFile.getDataDirectory();

          FdFile.forEachFile(dir, function(file) {
            var match = file.leafName.match(/^(\d+)(-zoom)?\.png$/);
            if (match) {
              var id = match[1];
              if (!items[id]) file.remove(false);
            }
          });
        },

        addPage: function() {
          var root = FdBookmark.getRoot();
          var item = {
            url: content.location.href,
            title: content.document.title,
            folderId: root.id,
            index: -1
          }
          FdBookmark.saveBookmark(item);
          var message = FdBundle.getString("pageAdded");
          FdUtils.popup(message);
        }
      }
      FdLegacy.migrate();
      setTimeout(Fd.autoRefresh, 3 * 1000);
      addEventListener("load", Fd.initialize, false);
      addEventListener("unload", Fd.cleanUp, false);
    ]]>
  </script>
</overlay>
