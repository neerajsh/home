;; Object elisp/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "elisp/"
  :tables (list 
   (semanticdb-table "modes.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("autoloads" function (:arguments ("file" "&rest" "funcs")) nil [70 608]) ("setq" code nil nil [666 700]) ("my-etags-setup" function nil nil [701 756]) ("eval-after-load" code nil nil [757 837]) ("add-to-list" code nil nil [906 972]) ("yasnippet" include nil nil [973 993]) ("yas/initialize" code nil nil [1018 1034]) ("yas/load-directory" code nil nil [1035 1093]) ("add-to-list" code nil nil [1148 1217]) ("add-to-list" code nil nil [2211 2271]) ("ecb-autoloads" include nil nil [2272 2296]) ("load-ecb" function (:user-visible-flag t) nil [2298 2504]) ("autoloads" code nil nil [2567 2674]) ("setq" code nil nil [2728 2764]) ("eval-after-load" code nil nil [2857 3527]) ("compile" include nil nil [3604 3622]) ("my-compile-setup" function nil nil [3625 3726]) ("add-hook" code nil nil [3727 3778]) ("compilation-added-font-lock-keywords" variable (:constant-flag t) nil [3835 3886]) ("setq" code nil nil [3887 4080]) ("font-lock-add-keywords" code nil nil [4081 4160]) ("filladapt" include nil nil [4225 4245]) ("setq" code nil nil [4246 4283]) ("setq-default" code nil nil [4284 4315]) ("cc-mode" include nil nil [4417 4435]) ("dabbrev" include nil nil [4455 4473]) ("setq" code nil nil [4476 4547]) ("eval-after-load" code nil nil [4583 4637]) ("cc-debug" function nil nil [4639 4751]) ("when" code nil nil [4776 5020]) ("my-cc-common-setup" function nil nil [5022 5628]) ("add-hook" code nil nil [5629 5679]) ("define-abbrev-table" code nil nil [5712 6258]) ("define-abbrev-table" code nil nil [6260 6466]) ("setq" code nil nil [6468 6516]) ("java-class-comment-hook" function nil nil [6518 6741]) ("copyright-comment-hook" function nil nil [6743 7226]) ("jdok" include nil nil [7255 7270]) ("my-jdok-setup" function nil nil [7272 7563]) ("add-hook" code nil nil [7564 7605]) ("jdok-generate-javadoc-template" function (:prototype-flag t :user-visible-flag t) nil [7606 7664]) ("my-java-setup" function nil nil [7666 8189]) ("add-hook" code nil nil [8190 8231]) ("jad-buffer" function (:user-visible-flag t) nil [8233 8627]) ("my-cc-setup" function nil nil [8636 9335]) ("add-hook" code nil nil [9336 9374]) ("add-to-list" code nil nil [9376 9449]) ("add-to-list" code nil nil [9450 9555]) ("adjust-autoloads" function nil nil [9645 9724]) ("add-hook" code nil nil [9725 9770]) ("csharp-mode" function (:prototype-flag t :user-visible-flag t) nil [9848 9921]) ("add-to-list" code nil nil [9922 9978]) ("eval-after-load" code nil nil [10011 10347]) ("my-csharp-setup" function nil nil [10349 11297]) ("add-hook" code nil nil [11298 11343]) ("visual-basic-mode" function (:prototype-flag t :user-visible-flag t) nil [11396 11467]) ("add-to-list" code nil nil [11468 11561]) ("my-text-setup" function nil nil [11616 11775]) ("add-hook" code nil nil [11776 11817]) ("perl-mode" include nil nil [11891 11911]) ("my-perl-setup" function nil nil [11913 11958]) ("add-hook" code nil nil [11959 12000]) ("cperl-mode" include nil nil [12075 12096]) ("perl-mode" function (:prototype-flag t :user-visible-flag t) nil [12098 12177]) ("my-cperl-setup" function nil nil [12178 12413]) ("add-hook" code nil nil [12417 12460]) ("python-mode" include nil nil [12536 12558]) ("my-python-setup" function nil nil [12560 12669]) ("add-hook" code nil nil [12670 12715]) ("python-mode" function (:prototype-flag t :user-visible-flag t) nil [12716 12778]) ("add-to-list" code nil nil [12779 12842]) ("add-to-list" code nil nil [12843 12907]) ("add-to-list" code nil nil [12908 12964]) ("tcl" include nil nil [13037 13051]) ("my-tcl-setup" function nil nil [13053 13106]) ("add-hook" code nil nil [13107 13146]) ("make-mode" include nil nil [13224 13244]) ("my-makefile-setup" function nil nil [13246 13385]) ("add-hook" code nil nil [13386 13435]) ("add-to-list" code nil nil [13436 13495]) ("add-to-list" code nil nil [13496 13567]) ("html-helper-mode" function (:prototype-flag t :user-visible-flag t) nil [13642 13710]) ("html-helper-mode" include nil nil [13730 13757]) ("setq" code nil nil [13759 13795]) ("setq" code nil nil [13796 13917]) ("my-html-setup" function nil nil [13918 14022]) ("add-hook" code nil nil [14023 14071]) ("add-to-list" code nil nil [14072 14138]) ("mmm-auto" include nil nil [14147 14166]) ("setq" code nil nil [14167 14196]) ("setq" code nil nil [14197 14234]) ("mmm-add-mode-ext-class" code nil nil [14236 14296]) ("mmm-add-mode-ext-class" code nil nil [14297 14352]) ("css-mode" function (:prototype-flag t :user-visible-flag t) nil [14361 14405]) ("my-css-setup" function nil nil [14406 14450]) ("add-to-list" code nil nil [14451 14505]) ("add-to-list" code nil nil [14514 14576]) ("mmm-add-mode-ext-class" code nil nil [14577 14634]) ("add-to-list" code nil nil [14635 14698]) ("mmm-add-mode-ext-class" code nil nil [14699 14757]) ("add-to-list" code nil nil [14765 14818]) ("add-to-list" code nil nil [14872 14926]) ("sql" include nil nil [14999 15013]) ("setq" code nil nil [15038 15117]) ("eval-after-load" code nil nil [15118 15539]) ("sql-added-font-lock-keywords" variable (:constant-flag t) nil [15541 15584]) ("when" code nil nil [15585 20400]) ("my-sql-setup" function nil nil [20402 20459]) ("my-sql-send-file" function (:arguments ("path")) nil [20460 20825]) ("my-sql-interactive-setup" function nil nil [20827 21004]) ("eval-after-load" code nil nil [21006 21154]) ("add-to-list" code nil nil [21156 21210]) ("setq" code nil nil [21266 21313]) ("setq" code nil nil [21377 21405]) ("generic-x" include nil nil [21425 21445]) ("if" code nil nil [21447 21602]) ("add-to-list" code nil nil [21604 21668]) ("let" code nil nil [21669 21723]) ("setq" code nil nil [21770 21857]) ("generic-mode-map" variable nil nil [21861 21925]) ("setq" code nil nil [21926 21970]) ("define-key" code nil nil [21971 22027]) ("generic" include nil nil [22048 22066]) ("generic" include nil nil [22068 22086]) ("define-generic-mode" code nil nil [22090 22624]) ("define-generic-mode" code nil nil [22628 22922]) ("define-generic-mode" code nil nil [22924 23199]) ("define-generic-mode" code nil nil [23201 23990]) ("when" code nil nil [23993 24353]) ("define-generic-mode" code nil nil [24355 24934]) ("define-generic-mode" code nil nil [24936 25208]) ("define-generic-mode" code nil nil [25210 25573]) ("indent-relative" function (:user-visible-flag t :arguments ("&optional" "unindented-ok")) nil [25641 27077]) ("ps-print" include nil nil [27155 27174]) ("my-ps-hook" function nil nil [27176 27566]) ("add-hook" code nil nil [27647 27684]) ("pager" include nil nil [27739 27755]) ("eval-after-load" code nil nil [27810 27904]) ("gud" include nil nil [27977 27991]) ("gud-added-font-lock-keywords" variable (:constant-flag t) nil [27994 28037]) ("when" code nil nil [28038 29491]) ("my-gud-setup" function nil nil [29493 29558]) ("make-completion-re" function (:arguments ("re")) nil [29635 29706]) ("make-prefix-re" function (:arguments ("prefix")) nil [29707 29787]) ("make-exact-re" function (:arguments ("words")) nil [29788 29846]) ("make-suffix-re" function (:arguments ("suffix")) nil [29847 29927]) ("setup-completion-keywords" function nil nil [29929 31419]) ("when" code nil nil [31421 31498]) ("abtags" include nil nil [31519 31536]) ("completion-setup-directory-face" function nil nil [31538 31895]) ("add-hook" code nil nil [31896 31966]) ("add-to-list" code nil nil [32023 32082]) ("eval-after-load" code nil nil [32406 32496]) ("setq" code nil nil [32558 32590]) ("add-to-list" code nil nil [32591 32649]) ("diff-mode" include nil nil [32723 32743]) ("my-diff-setup" function nil nil [32745 32943]) ("add-hook" code nil nil [32944 32985]) ("add-to-list" code nil nil [32986 33044]) ("add-to-list" code nil nil [33112 33378]) ("add-hook" code nil nil [33379 33437]) ("add-to-list" code nil nil [33438 33515]) ("autoloads" code nil nil [33568 33761]) ("p4-prefix-map" function (:prototype-flag t) nil [33762 33820]) ("p4" include nil nil [33841 33854]) ("eval-after-load" code nil nil [33856 34527]) ("define-generic-mode" code nil nil [34554 34979]) ("p4-pick-mode-hook" function nil nil [34981 35732]) ("add-hook" code nil nil [35733 35779]) ("eval-after-load" code nil nil [35780 35858]) ("autoloads" code nil nil [35912 35955]) ("psvn" include nil nil [35976 35991]) ("eval-after-load" code nil nil [35993 36050]) ("define-generic-mode" code nil nil [36052 36536]) ("abtags-key-map" function (:prototype-flag t) nil [36593 36657]) ("load" code nil nil [36711 36731]) ("nxml-mode" include nil nil [36751 36771]) ("my-nxml-setup" function nil nil [36773 37431]) ("eval-after-load" code nil nil [37432 37506]) ("clever-nxml-tab" function (:user-visible-flag t :arguments ("arg")) nil [37508 37883]) ("add-to-list" code nil nil [37885 38013]) ("fset" code nil nil [38014 38042]) ("fset" code nil nil [38043 38071]) ("eval-after-load" code nil nil [38134 41437]) ("eval-after-load" code nil nil [41439 43701]) ("color-theme-select" function (:prototype-flag t :user-visible-flag t) nil [44312 44372]) ("antlr-mode" function (:prototype-flag t :user-visible-flag t) nil [44428 44469]) ("setq" code nil nil [44470 44541]) ("auto-image-file-mode" code nil nil [44611 44635]) ("ruby-mode" include nil nil [44714 44734]) ("ruby-electric" include nil nil [44754 44778]) ("my-ruby-setup" function nil nil [44781 44941]) ("add-hook" code nil nil [44942 44983]) ("add-to-list" code nil nil [44984 45040]) ("add-to-list" code nil nil [45041 45099]) ("add-to-list" code nil nil [45100 45159]) ("add-to-list" code nil nil [45160 45219]) ("define-generic-mode" code nil nil [45221 45634]) ("load" code nil nil [45694 45750]) ("add-hook" code nil nil [45751 45806]) ("add-hook" code nil nil [45807 45860]))
    :file "modes.el"
    :pointmax 45924
    :unmatched-syntax 'nil
    )
   (semanticdb-table "start.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("AMDELISP" variable nil nil [194 215]) ("when" code nil nil [217 273]) ("setq" code nil nil [275 317]) ("let" code nil nil [318 517]) ("setq" code nil nil [519 585]) ("setq" code nil nil [586 663]) ("load" code nil nil [763 777]) ("load" code nil nil [778 792]) ("when" code nil nil [793 831]) ("when" code nil nil [832 886]) ("load" code nil nil [887 901]) ("load" code nil nil [902 945]) ("if" code nil nil [1157 1262]) ("when" code nil nil [1264 1302]) ("when" code nil nil [1304 1351]))
    :file "start.el"
    :pointmax 1352
    :unmatched-syntax 'nil
    )
   (semanticdb-table "window.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("cl" include nil nil [67 80]) ("font-lock" include nil nil [81 101]) ("window-build-font" function (:arguments ("family" "points")) nil [103 652]) ("window-set-frame-default" function (:arguments ("key" "value")) nil [717 930]) ("window-setup" function nil nil [1055 1161]) ("window-position" variable (:default-value (quote center)) nil [1343 1375]) ("window-columns" variable (:default-value 100) nil [1376 1403]) ("window-fudge" variable (:default-value (quote (0 0 0 0))) nil [1404 1436]) ("window-layout" function nil nil [1438 2353]) ("add-hook" code nil nil [2354 2396]) ("gnuserv" include nil nil [2527 2545]) ("when" code nil nil [2547 2810]))
    :file "window.el"
    :pointmax 2811
    :unmatched-syntax 'nil
    )
   (semanticdb-table "linux.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("define-key" code nil nil [106 148]) ("define-key" code nil nil [149 191]) ("define-key" code nil nil [192 234]) ("define-key" code nil nil [235 278]) ("define-key" code nil nil [279 319]) ("define-key" code nil nil [320 363]))
    :file "linux.el"
    :pointmax 364
    )
   (semanticdb-table "make.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("compile" include nil nil [76 94]) ("make-ant" variable (:default-value "ant") nil [159 182]) ("make-cs" variable (:default-value (format "%s\\Microsoft.Net\\Framework\\v1.0.3705\\csc.exe /nologo /debug+" (getenv "SystemRoot"))) nil [183 309]) ("make-msb" variable (:default-value "%smsbuild /t:rebuild") nil [311 351]) ("make-jam" variable (:default-value "j") nil [353 374]) ("make-build" variable (:default-value "build") nil [375 402]) ("make-java" variable (:default-value "javac") nil [403 429]) ("make-vc" variable (:default-value "nmake /nologo /s /f") nil [430 468]) ("make-makefiles" variable (:default-value (quote ("build.xml" "build.bat" "Makefile" "GNUmakefile" "Jamfile"))) nil [469 554]) ("make-read-directory" function (:arguments ("prompt")) nil [574 1108]) ("make-find-makefile" function (:arguments ("dir")) nil [1110 1412]) ("make-guess-command" function (:arguments ("makefile")) nil [1414 1814]) ("make-doit" function (:arguments ("command" "&rest" "dir")) nil [1831 2370]) ("make-directory" variable nil nil [2395 2422]) ("make-command" variable nil nil [2423 2448]) ("make-command-history" variable nil nil [2449 2482]) ("make" function (:arguments ("&rest" "prompt")) nil [2499 3399]) ("make-remake" function (:user-visible-flag t) nil [3416 3561]) ("make-magic" function (:user-visible-flag t) nil [3578 4044]) ("make-current-directory" function (:user-visible-flag t) nil [4061 4271]) ("make" package nil nil [4273 4288]))
    :file "make.el"
    :pointmax 4289
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0pre4"
  :semanticdb-version "2.0pre4"
  )
